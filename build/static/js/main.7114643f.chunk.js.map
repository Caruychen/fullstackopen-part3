{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","handleSearchChange","onChange","Input","text","value","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","deletePerson","name","number","onClick","Persons","persons","map","Notification","message","className","status","baseUrl","axios","get","then","response","data","newPerson","post","updatedPerson","put","id","delete","App","useState","setPersons","setNewName","setNewNumber","search","setSearch","setMessage","useEffect","personService","initialPersons","updatePerson","window","confirm","changedPerson","returnedPerson","notify","catch","error","filter","setTimeout","personsToShow","toLowerCase","includes","personsFormProps","event","preventDefault","existingPerson","find","concat","target","targetPerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7114643f.chunk.js","sourcesContent":["const Filter = ({ handleSearchChange }) => {\n  return (\n    <div>filter shown with\n      <input onChange={handleSearchChange} />\n    </div>\n  )\n}\n\nexport default Filter","const Input = ({ text, value, onChange }) => {\n  return (\n    <div>\n      {text}\n      <input\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <Input text={\"name:\"} value={props.newName} onChange={props.handleNameChange} />\n      <Input text={\"number:\"} value={props.newNumber} onChange={props.handleNumberChange} />\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","const Person = ({person, deletePerson }) => {\n  return (\n    <p>{person.name} {person.number} <button onClick={deletePerson}>delete</button></p>\n    )\n}\n\nconst Persons = ({ persons, deletePerson }) => {\n  return (\n    <div>\n      {persons.map(person =>\n        <Person key={person.name} person={person} deletePerson={deletePerson(person)}/>\n      )}\n    </div>\n  )\n}\n\nexport default Persons","const Notification = ({ message }) => {\n  if (message === null) return null\n\n  return (\n    <div className={`notification ${message.status}`}>\n      {message.text}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n  const request = axios.post(baseUrl, newPerson)\n  return request.then(response => response.data)\n}\n\nconst update = updatedPerson => {\n  const request = axios.put(`${baseUrl}/${updatedPerson.id}`, updatedPerson)\n  return request.then(response => response.data)\n}\n\nconst destroy = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, destroy }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [search, setSearch] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const existingPerson = persons.find(person => person.name === newName)\n    if (!existingPerson) {\n      personService\n        .create({ name: newName, number: newNumber })\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          notify('success', `${newName} added`)\n        })\n    }\n    else {\n      updatePerson(existingPerson)\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const updatePerson = (person) => {\n    if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n      const changedPerson = { ...person, number: newNumber }\n      personService\n        .update(changedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== changedPerson.id ? person : returnedPerson))\n          notify('success', `${newName} updated`)\n        })\n        .catch(error => {\n          if (error.response.status === 404) {\n            setPersons(persons.filter(person => person.id !== changedPerson.id))\n            notify('error', `Information of ${newName} has already been removed from server`)\n          }\n        })\n    }\n  }\n\n  const deletePerson = (targetPerson) => () => {\n    if (window.confirm(`Delete ${targetPerson.name}?`)) {\n      personService\n        .destroy(targetPerson.id)\n        .then(response => {\n          notify('success', `${targetPerson.name} deleted from server.`)\n        })\n        .catch(error => {\n          if (error.response.status === 404) {\n            notify('error', `${targetPerson.name} was already deleted from server.`)\n          }\n        })\n      setPersons(persons.filter(person => person.id !== targetPerson.id))\n    }\n  }\n\n  const notify = (status, text) => {\n    setMessage({ status, text })\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000);\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value)\n  }\n\n  const personsToShow = persons.filter(person =>\n    person.name.toLowerCase().includes(\n      search.toLowerCase()\n    )\n  )\n\n  const personsFormProps = {\n    addPerson,\n    newName,\n    handleNameChange,\n    newNumber,\n    handleNumberChange\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter handleSearchChange={handleSearchChange} />\n      <h3>add a new</h3>\n      <PersonForm {...personsFormProps} />\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}